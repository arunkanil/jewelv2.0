{"version":3,"sources":["webpack:///src/app/views/theme/colors.component.ts","webpack:///src/app/views/theme/theme.module.ts","webpack:///src/app/views/theme/theme-routing.module.ts","webpack:///src/app/views/theme/colors.component.html"],"names":["VerifiedListComponent","dataservice","router","fb","callerForm","group","id","required","loading","btnLoading","orders","columnDefs","rowData","users","btnDisabled","rowSelection","getLists","filter","is_verified","kp_caller_assigned_null","getCustomersFilter","valueChanges","subscribe","result","console","log","data","customers","getUsers","params","gridApi","api","gridColumnApi","columnApi","event","selectedRows","getSelectedRows","length","resp","value","Array","from","x","SetKpCaller","updateUser","alert","myModal","hide","template","ThemeModule","imports","withComponents","forRoot","declarations","routes","path","children","redirectTo","component","title","ThemeRoutingModule","forChild","exports"],"mappings":"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","file":"views-theme-theme-module-es5.js","sourcesContent":["import { Component, ViewChild } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { DataService } from \"../../data.service\";\nimport { customersColumn } from \"../../constants/columnMetadata\";\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\n\n@Component({\n  templateUrl: \"colors.component.html\",\n})\nexport class VerifiedListComponent {\n  rowSelection: string;\n  constructor(\n    public dataservice: DataService,\n    private router: Router,\n    private fb: FormBuilder\n  ) {\n    this.columnDefs = [...customersColumn];\n    this.rowSelection = \"multiple\";\n  }\n  @ViewChild(\"myModal\") public myModal: ModalDirective;\n  callerForm = this.fb.group({\n    id: [\"\", Validators.required],\n  });\n  loading = true;\n  btnLoading = false;\n  orders: any = {};\n  columnDefs = [];\n  rowData: any = [];\n  users: any = [];\n  selectedRows: any[];\n  btnDisabled = true;\n  private gridApi;\n  private gridColumnApi;\n\n  ngOnInit(): void {\n    this.getLists();\n  }\n  getLists() {\n    this.loading = true;\n    let filter = {\n      is_verified: true,\n      kp_caller_assigned_null: true,\n    };\n    this.dataservice\n      .getCustomersFilter(filter)\n      .valueChanges.subscribe((result: any) => {\n        console.log(\"getCustomersFilter\", result.data.customers);\n        this.rowData = result.data.customers;\n      });\n    this.dataservice\n      .getUsers(\"KP_CALLER\")\n      .valueChanges.subscribe((result: any) => {\n        console.log(\"getUsers\", result.data.users);\n        this.users = result.data.users;\n      });\n  }\n  onGridReady(params) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n  }\n  onSelectionChanged(event) {\n    this.selectedRows = this.gridApi.getSelectedRows();\n    if (this.selectedRows.length > 0) {\n      this.btnDisabled = false;\n    } else {\n      this.btnDisabled = true;\n    }\n    console.log(this.selectedRows);\n    // this.router.navigate(\n    //   [\"/kpcaller/kp_customer_details\", selectedRows[0].id],\n    //   {\n    //     state: { data: selectedRows },\n    //   }\n    // );\n  }\n  FormSubmit() {\n    let resp = {};\n    console.log(\n      this.callerForm.value,\n      Array.from(this.selectedRows, (x) => x.id)\n    );\n    this.dataservice\n      .SetKpCaller(\n        this.callerForm.value.id,\n        Array.from(this.selectedRows, (x) => x.id)\n      )\n      .subscribe((result: any) => {\n        resp = result.data;\n        console.log(\"response\", result);\n        if (result.data.updateUser) {\n          alert(\"Assigned successfully!\");\n          this.getLists();\n          this.myModal.hide();\n        } else {\n          alert(\"Failed. Please check the fields!\");\n        }\n      });\n  }\n}\n","// Angular\nimport { CommonModule } from '@angular/common';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\nimport { NgModule } from '@angular/core';\nimport { VerifiedListComponent } from './colors.component';\n\n// import { TypographyComponent } from './typography.component';\n\n// Theme Routing\nimport { ThemeRoutingModule } from './theme-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ThemeRoutingModule,\n    ReactiveFormsModule,\n    AgGridModule.withComponents([]),\n    ModalModule.forRoot(),\n    FormsModule\n  ],\n  declarations: [\n    VerifiedListComponent,\n    // TypographyComponent\n  ]\n})\nexport class ThemeModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { VerifiedListComponent } from './colors.component';\nimport { TypographyComponent } from './typography.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    // data: {\n    //   title: 'Theme'\n    // },\n    children: [\n      {\n        path: '',\n        redirectTo: 'manager'\n      },\n      {\n        path: 'verified_list',\n        component: VerifiedListComponent,\n        data: {\n          title: 'Verified List'\n        }\n      },\n      // {\n      //   path: 'typography',\n      //   component: TypographyComponent,\n      //   data: {\n      //     title: 'Typography'\n      //   }\n      // }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ThemeRoutingModule {}\n","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\" style=\\\"display: flex; justify-content: space-between\\\">\\n      <h2>Verified List</h2>\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" [disabled]=\\\"btnDisabled\\\"\\n        (click)=\\\"myModal.show()\\\">\\n        Assign to caller\\n      </button>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n          <ag-grid-angular #agGrid style=\\\"width: 100%; height: 500px\\\" id=\\\"myGrid\\\" class=\\\"ag-theme-alpine\\\"\\n            [columnDefs]=\\\"columnDefs\\\" [rowData]=\\\"rowData\\\" [rowSelection]=\\\"rowSelection\\\"\\n            (gridReady)=\\\"onGridReady($event)\\\" (selectionChanged)=\\\"onSelectionChanged($event)\\\" animateRows=\\\"true\\\">\\n          </ag-grid-angular>\\n        </div>\\n      </div>\\n    </div>\\n    <div bsModal #myModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\n      aria-hidden=\\\"true\\\">\\n      <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n            <h4 class=\\\"modal-title\\\">Assign to Caller</h4>\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"myModal.hide()\\\" aria-label=\\\"Close\\\">\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n            <form [formGroup]=\\\"callerForm\\\" (ngSubmit)=\\\"FormSubmit()\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"id\\\">KP Caller</label>\\n                <select class=\\\"form-control\\\" id=\\\"id\\\" required ngModel name=\\\"group\\\" formControlName=\\\"id\\\">\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                  <option *ngFor=\\\"let item of users\\\" value=\\\"{{ item.id }}\\\">\\n                    {{ item.username }}\\n                  </option>\\n                </select>\\n              </div>\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">\\n                Close\\n              </button>\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary ml-2\\\" [disabled]=\\\"btnLoading || !callerForm.valid\\\">\\n                <span *ngIf=\\\"btnLoading\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\"\\n                  aria-hidden=\\\"true\\\"></span>\\n                Save changes\\n              </button>\\n            </form>\\n          </div>\\n        </div>\\n        <!-- /.modal-content -->\\n      </div>\\n    </div>\\n  </div>\\n</div>\";"]}