{"version":3,"sources":["./src/app/views/theme/colors.component.ts","./src/app/views/theme/theme.module.ts","./src/app/views/theme/theme-routing.module.ts","./src/app/views/theme/colors.component.html"],"names":[],"mappings":"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","file":"views-theme-theme-module-es2015.js","sourcesContent":["import { Component, ViewChild } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { DataService } from \"../../data.service\";\nimport { customersColumn } from \"../../constants/columnMetadata\";\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\n\n@Component({\n  templateUrl: \"colors.component.html\",\n})\nexport class VerifiedListComponent {\n  rowSelection: string;\n  constructor(\n    public dataservice: DataService,\n    private router: Router,\n    private fb: FormBuilder\n  ) {\n    this.columnDefs = [...customersColumn];\n    this.rowSelection = \"multiple\";\n  }\n  @ViewChild(\"myModal\") public myModal: ModalDirective;\n  callerForm = this.fb.group({\n    id: [\"\", Validators.required],\n  });\n  loading = true;\n  btnLoading = false;\n  orders: any = {};\n  columnDefs = [];\n  rowData: any = [];\n  users: any = [];\n  selectedRows: any[];\n  btnDisabled = true;\n  private gridApi;\n  private gridColumnApi;\n\n  ngOnInit(): void {\n    this.getLists();\n  }\n  getLists() {\n    this.loading = true;\n    let filter = {\n      is_verified: true,\n      kp_caller_assigned_null: true,\n    };\n    this.dataservice\n      .getCustomersFilter(filter)\n      .valueChanges.subscribe((result: any) => {\n        console.log(\"getCustomersFilter\", result.data.customers);\n        this.rowData = result.data.customers;\n      });\n    this.dataservice\n      .getUsers(\"KP_CALLER\")\n      .valueChanges.subscribe((result: any) => {\n        console.log(\"getUsers\", result.data.users);\n        this.users = result.data.users;\n      });\n  }\n  onGridReady(params) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n  }\n  onSelectionChanged(event) {\n    this.selectedRows = this.gridApi.getSelectedRows();\n    if (this.selectedRows.length > 0) {\n      this.btnDisabled = false;\n    } else {\n      this.btnDisabled = true;\n    }\n    console.log(this.selectedRows);\n    // this.router.navigate(\n    //   [\"/kpcaller/kp_customer_details\", selectedRows[0].id],\n    //   {\n    //     state: { data: selectedRows },\n    //   }\n    // );\n  }\n  FormSubmit() {\n    let resp = {};\n    console.log(\n      this.callerForm.value,\n      Array.from(this.selectedRows, (x) => x.id)\n    );\n    this.dataservice\n      .SetKpCaller(\n        this.callerForm.value.id,\n        Array.from(this.selectedRows, (x) => x.id)\n      )\n      .subscribe((result: any) => {\n        resp = result.data;\n        console.log(\"response\", result);\n        if (result.data.updateUser) {\n          alert(\"Assigned successfully!\");\n          this.getLists();\n          this.myModal.hide();\n        } else {\n          alert(\"Failed. Please check the fields!\");\n        }\n      });\n  }\n}\n","// Angular\nimport { CommonModule } from '@angular/common';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\nimport { NgModule } from '@angular/core';\nimport { VerifiedListComponent } from './colors.component';\n\n// import { TypographyComponent } from './typography.component';\n\n// Theme Routing\nimport { ThemeRoutingModule } from './theme-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ThemeRoutingModule,\n    ReactiveFormsModule,\n    AgGridModule.withComponents([]),\n    ModalModule.forRoot(),\n    FormsModule\n  ],\n  declarations: [\n    VerifiedListComponent,\n    // TypographyComponent\n  ]\n})\nexport class ThemeModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { VerifiedListComponent } from './colors.component';\nimport { TypographyComponent } from './typography.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    // data: {\n    //   title: 'Theme'\n    // },\n    children: [\n      {\n        path: '',\n        redirectTo: 'manager'\n      },\n      {\n        path: 'verified_list',\n        component: VerifiedListComponent,\n        data: {\n          title: 'Verified List'\n        }\n      },\n      // {\n      //   path: 'typography',\n      //   component: TypographyComponent,\n      //   data: {\n      //     title: 'Typography'\n      //   }\n      // }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ThemeRoutingModule {}\n","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\" style=\\\"display: flex; justify-content: space-between\\\">\\n      <h2>Verified List</h2>\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" [disabled]=\\\"btnDisabled\\\"\\n        (click)=\\\"myModal.show()\\\">\\n        Assign to caller\\n      </button>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n          <ag-grid-angular #agGrid style=\\\"width: 100%; height: 500px\\\" id=\\\"myGrid\\\" class=\\\"ag-theme-alpine\\\"\\n            [columnDefs]=\\\"columnDefs\\\" [rowData]=\\\"rowData\\\" [rowSelection]=\\\"rowSelection\\\"\\n            (gridReady)=\\\"onGridReady($event)\\\" (selectionChanged)=\\\"onSelectionChanged($event)\\\" animateRows=\\\"true\\\">\\n          </ag-grid-angular>\\n        </div>\\n      </div>\\n    </div>\\n    <div bsModal #myModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\n      aria-hidden=\\\"true\\\">\\n      <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n            <h4 class=\\\"modal-title\\\">Assign to Caller</h4>\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"myModal.hide()\\\" aria-label=\\\"Close\\\">\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n            <form [formGroup]=\\\"callerForm\\\" (ngSubmit)=\\\"FormSubmit()\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"id\\\">KP Caller</label>\\n                <select class=\\\"form-control\\\" id=\\\"id\\\" required ngModel name=\\\"group\\\" formControlName=\\\"id\\\">\\n                  <option value=\\\"\\\" disabled selected hidden>Choose...</option>\\n                  <option *ngFor=\\\"let item of users\\\" value=\\\"{{ item.id }}\\\">\\n                    {{ item.username }}\\n                  </option>\\n                </select>\\n              </div>\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">\\n                Close\\n              </button>\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary ml-2\\\" [disabled]=\\\"btnLoading || !callerForm.valid\\\">\\n                <span *ngIf=\\\"btnLoading\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\"\\n                  aria-hidden=\\\"true\\\"></span>\\n                Save changes\\n              </button>\\n            </form>\\n          </div>\\n        </div>\\n        <!-- /.modal-content -->\\n      </div>\\n    </div>\\n  </div>\\n</div>\";"],"sourceRoot":"webpack:///"}